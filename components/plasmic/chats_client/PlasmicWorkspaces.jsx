// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: gRaosoDicn4VUCndSzazbA
// Component: PlpIcihQhaX91
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavMenu from "../../NavMenu"; // plasmic-import: 9cR2sxpykRjad/component
import AsideMenuGroup from "../../AsideMenuGroup"; // plasmic-import: uLABqFF5hL/component
import UserInfoBlock from "../../UserInfoBlock"; // plasmic-import: LJU-ZQ2OaH/component
import SceneInfo from "../../SceneInfo"; // plasmic-import: Zf1zYQ7YK23by/component
import Toolbar from "../../Toolbar"; // plasmic-import: UlyQXoohOO/component
import { useScreenVariants as useScreenVariantsnl9I0Oib3VOwY } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: nl9_I0oib3VOwY/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic_chats_client.module.css"; // plasmic-import: gRaosoDicn4VUCndSzazbA/projectcss
import sty from "./PlasmicWorkspaces.module.css"; // plasmic-import: PlpIcihQhaX91/css
import Icon30Icon from "./icons/PlasmicIcon__Icon30"; // plasmic-import: 2o24QZW282/icon

export const PlasmicWorkspaces__VariantProps = new Array();

export const PlasmicWorkspaces__ArgProps = new Array("grid");

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicWorkspaces__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsnl9I0Oib3VOwY()
  });
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicWorkspaces.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicWorkspaces.pageMetadata.title}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicWorkspaces.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          projectcss.plasmic_tokens,
          plasmic_antd_5_hostless_css.plasmic_tokens,
          sty.root
        )}
      >
        {true ? (
          <div
            data-plasmic-name={"bkgd"}
            data-plasmic-override={overrides.bkgd}
            className={classNames(projectcss.all, sty.bkgd)}
          >
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <NavMenu
                data-plasmic-name={"navMenu"}
                data-plasmic-override={overrides.navMenu}
                className={classNames("__wab_instance", sty.navMenu)}
                menu1={true}
              />
            ) : null}
            <section
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              className={classNames(projectcss.all, sty.section)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"freeBox"}
                  data-plasmic-override={overrides.freeBox}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox)}
                >
                  {true ? (
                    <div
                      data-plasmic-name={"aside"}
                      data-plasmic-override={overrides.aside}
                      className={classNames(projectcss.all, sty.aside)}
                    >
                      {(
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? true
                          : true
                      ) ? (
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"tabTitle"}
                          data-plasmic-override={overrides.tabTitle}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.tabTitle)}
                        >
                          {(
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? true
                              : true
                          ) ? (
                            <div
                              data-plasmic-name={"text"}
                              data-plasmic-override={overrides.text}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text
                              )}
                            >
                              {"场景分类"}
                            </div>
                          ) : null}
                          {(
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? true
                              : true
                          ) ? (
                            <Icon30Icon
                              data-plasmic-name={"svg"}
                              data-plasmic-override={overrides.svg}
                              className={classNames(projectcss.all, sty.svg)}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>
                      ) : null}
                      <p.Stack
                        as={"aside"}
                        data-plasmic-name={"scenesTabs"}
                        data-plasmic-override={overrides.scenesTabs}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.scenesTabs,
                          ``
                        )}
                        id={"scenes_tag"}
                        tabIndex={1}
                      >
                        <AsideMenuGroup
                          data-plasmic-name={"asideMenuGroup"}
                          data-plasmic-override={overrides.asideMenuGroup}
                          className={classNames(
                            "__wab_instance",
                            sty.asideMenuGroup
                          )}
                        />
                      </p.Stack>
                      {(
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? true
                          : true
                      ) ? (
                        <UserInfoBlock
                          data-plasmic-name={"userInfoBlock"}
                          data-plasmic-override={overrides.userInfoBlock}
                          className={classNames(
                            "__wab_instance",
                            sty.userInfoBlock
                          )}
                        />
                      ) : null}
                    </div>
                  ) : null}
                  {true ? (
                    <div
                      data-plasmic-name={"columns"}
                      data-plasmic-override={overrides.columns}
                      className={classNames(projectcss.all, sty.columns)}
                    >
                      <div
                        data-plasmic-name={"column"}
                        data-plasmic-override={overrides.column}
                        className={classNames(projectcss.all, sty.column)}
                      >
                        <div
                          data-plasmic-name={"grid"}
                          data-plasmic-override={overrides.grid}
                          className={classNames(projectcss.all, sty.grid)}
                        >
                          {p.renderPlasmicSlot({
                            defaultContents: (
                              <React.Fragment>
                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__zigmA
                                  )}
                                  desc={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__lYmX8
                                      )}
                                    >
                                      {
                                        "小红书营销专用，网络社区小红书博主风格的语气"
                                      }
                                    </div>
                                  }
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__u2GgT
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__miKH
                                      )}
                                    >
                                      {"小红书营销短文和语气"}
                                    </div>
                                  }
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__ok60U
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__kCFbv
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__qdlmq
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__hx7T0
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__dtd5A
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__cvTn8
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__bu96
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__rgGA
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__maa04
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__pBRxc
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__dKhQ2
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__dLcox
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__eGbut
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__vg7IN
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__tyaSy
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__xWhDk
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__hlwVs
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__fUcGn
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__s39J
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__z4Na4
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__cOfkd
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__nwpwv
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__zbJkA
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__ya6O
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__lsOs6
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text___3HoS
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__yxIXy
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__tCiz
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__hjdX2
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text___8Aul8
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__gdgKx
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__cbLsw
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__gmpNj
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__y4TTi
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__sC1Lq
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__b5LuS
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__wnQhi
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__rQdSy
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />

                                <SceneInfo
                                  className={classNames(
                                    "__wab_instance",
                                    sty.sceneInfo__shpYm
                                  )}
                                  desc={"desc"}
                                  input={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__sK7C
                                      )}
                                    >
                                      {"Modal content"}
                                    </div>
                                  }
                                  output={"Modal content"}
                                  title={"场景标题"}
                                />
                              </React.Fragment>
                            ),

                            value: args.grid
                          })}
                        </div>
                      </div>
                    </div>
                  ) : null}
                </p.Stack>
              ) : null}
            </section>
          </div>
        ) : null}
        {(hasVariant(globalVariants, "screen", "mobileOnly") ? true : true) ? (
          <Toolbar
            data-plasmic-name={"toolbar"}
            data-plasmic-override={overrides.toolbar}
            className={classNames("__wab_instance", sty.toolbar)}
            tab1={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? true
                : undefined
            }
          />
        ) : null}
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "bkgd",
    "navMenu",
    "section",
    "freeBox",
    "aside",
    "tabTitle",
    "text",
    "svg",
    "scenesTabs",
    "asideMenuGroup",
    "userInfoBlock",
    "columns",
    "column",
    "grid",
    "toolbar"
  ],

  bkgd: [
    "bkgd",
    "navMenu",
    "section",
    "freeBox",
    "aside",
    "tabTitle",
    "text",
    "svg",
    "scenesTabs",
    "asideMenuGroup",
    "userInfoBlock",
    "columns",
    "column",
    "grid"
  ],

  navMenu: ["navMenu"],
  section: [
    "section",
    "freeBox",
    "aside",
    "tabTitle",
    "text",
    "svg",
    "scenesTabs",
    "asideMenuGroup",
    "userInfoBlock",
    "columns",
    "column",
    "grid"
  ],

  freeBox: [
    "freeBox",
    "aside",
    "tabTitle",
    "text",
    "svg",
    "scenesTabs",
    "asideMenuGroup",
    "userInfoBlock",
    "columns",
    "column",
    "grid"
  ],

  aside: [
    "aside",
    "tabTitle",
    "text",
    "svg",
    "scenesTabs",
    "asideMenuGroup",
    "userInfoBlock"
  ],

  tabTitle: ["tabTitle", "text", "svg"],
  text: ["text"],
  svg: ["svg"],
  scenesTabs: ["scenesTabs", "asideMenuGroup"],
  asideMenuGroup: ["asideMenuGroup"],
  userInfoBlock: ["userInfoBlock"],
  columns: ["columns", "column", "grid"],
  column: ["column", "grid"],
  grid: ["grid"],
  toolbar: ["toolbar"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicWorkspaces__ArgProps,
          internalVariantPropNames: PlasmicWorkspaces__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicWorkspaces__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicWorkspaces";
  } else {
    func.displayName = `PlasmicWorkspaces.${nodeName}`;
  }
  return func;
}

export const PlasmicWorkspaces = Object.assign(
  // Top-level PlasmicWorkspaces renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    bkgd: makeNodeComponent("bkgd"),
    navMenu: makeNodeComponent("navMenu"),
    section: makeNodeComponent("section"),
    freeBox: makeNodeComponent("freeBox"),
    aside: makeNodeComponent("aside"),
    tabTitle: makeNodeComponent("tabTitle"),
    text: makeNodeComponent("text"),
    svg: makeNodeComponent("svg"),
    scenesTabs: makeNodeComponent("scenesTabs"),
    asideMenuGroup: makeNodeComponent("asideMenuGroup"),
    userInfoBlock: makeNodeComponent("userInfoBlock"),
    columns: makeNodeComponent("columns"),
    column: makeNodeComponent("column"),
    grid: makeNodeComponent("grid"),
    toolbar: makeNodeComponent("toolbar"),
    // Metadata about props expected for PlasmicWorkspaces
    internalVariantProps: PlasmicWorkspaces__VariantProps,
    internalArgProps: PlasmicWorkspaces__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "工作台",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicWorkspaces;
/* prettier-ignore-end */
